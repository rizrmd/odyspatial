---
import '@fontsource/italiana';
import '@fontsource/plus-jakarta-sans/latin-300.css';
import '@fontsource/plus-jakarta-sans/latin-500.css';
import '@fontsource/plus-jakarta-sans/latin-800.css';
import { ClientRouter } from 'astro:transitions';
import Header from '../components/layout/Header.astro';
import Cal from '../components/react/Cal';

interface Props {
  description: string;
  title: string;
}

const { description, title } = Astro.props;
---

<!doctype html>
<html lang="en" x-cloak x-data :class="{ 'dark': $store.theme.isDark }">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
    <link rel="manifest" href="/site.webmanifest" />
    <meta name="generator" content={Astro.generator} />
    <meta name="description" content={description} />
    <title>{title}</title>
    <ClientRouter />
  </head>
  <body
    class="bg-primary-50 text-primary-950 antialiased transition dark:bg-primary-950 dark:text-primary-200"
  >
    <Header />
    <main>
      <slot />
    </main>
    <!-- <Footer /> -->
    <style is:global>
      [x-cloak] {
        display: none !important;
      }
    </style>
    <Cal client:load />
    <script>
      import Alpine from 'alpinejs';
      import collapse from '@alpinejs/collapse';

      Alpine.plugin(collapse);

      const store = {
        isDark: false,
        init() {
          this.isDark = (() => {
            if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
              return localStorage.getItem('theme') === 'dark';
            }
            return false;
          })();
        },
        toggle() {
          this.isDark = !this.isDark;
          localStorage.setItem('theme', this.isDark ? 'dark' : 'light');
        },
      };
      Alpine.store('theme', store);

      const w = window as any;
      w.Alpine = Alpine;
      Alpine.start();
    </script>
  </body>
</html>
